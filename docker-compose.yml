version: '3'
services:
  app:
    container_name: colorimage-server
    restart: always
    build: .
    env_file:
      - .env
    environment:
      POSTGRESQL_PROD_URL: ${POSTGRESQL_PROD_URL}
      POSTGRESQL_DEV_URL: postgres://admin:admin@postgres:3001/colorimage
      NODE_ENV: development
      POSTGRESQL_USERNAME: admin
      POSTGRESQL_DB: colorimage
      POSTGRESQL_PASSWD: admin
      POSTGRESQL_PORT: 3001
      PORT: 3000
      SECRET: 'secret'
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    volumes:
      - ./src/:/usr/src/app/src/
  postgres:
    container_name: postgres
    image: postgres:10.4
    ports:
      - "3001:5432"
    volumes: 
      - ./postgresdata:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
        - postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: colorimage
      command: "postgres -c config_file=./postgresdata/postgresql.conf log_statement=all"
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    networks:
        - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "3002:8080"
    volumes:
      - pg-data:/var/lib/pgadmin
    depends_on:
      - postgres
volumes:
  db-data:
  pg-data:
networks:
    postgres:
        driver: bridge
