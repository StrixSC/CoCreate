version: '3'
services:
  app:
    container_name: colorimage-server
    restart: always
    build: .
    env_file:
      - .env
    environment:
      PSQL_URL: 'postgres://admin:admin@postgres:5432/colorimage' 
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    volumes:
      - ./src/:/usr/src/app/src/
    networks:
      - postgres
    command: ["./wait-for-it.sh", "postgres:5432", "--", "npm", "run", "docker-dev"]
  postgres:
    container_name: postgres
    image: postgres:10.4
    ports:
      - "3001:5432"
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
        - postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PSQL_USER:-admin}
      POSTGRES_PASSWORD: ${PSQL_PASS:-admin}
      POSTGRES_DB: ${PSQL_DB:-colorimage}
      command: "postgres -c config_file=./postgresdata/postgresql.conf log_statement=all"
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    networks:
        - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "3002:8080"
    volumes:
      - pg-data:/var/lib/pgadmin
    depends_on:
      - postgres
  redis:
    image: redis
    container_name: redis-container
    ports:
      - "3003:3003"
    networks:
      - postgres
volumes:
  db-data:
  pg-data:
networks:
    postgres:
        driver: bridge
