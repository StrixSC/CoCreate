{
  "name": "server",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "node dist/bin/www.js",
    "dev": "@powershell -Command $env:DEBUG='Colorimage'; powershell -NoProfile -ExecutionPolicy Unrestricted -Command ./killport.ps1 3000; nodemon src/bin/www.ts",
    "dev-unix": "sudo kill $(lsof -t -i:3000); DEBUG=Colorimage nodemon src/bin/www.ts",
    "docker-dev": "DEBUG=Colorimage nodemon -L src/bin/www.ts",
    "build": "tsc -p .",
    "lint": "./node_modules/.bin/eslint . --ext .ts --no-error-on-unmatched-pattern",
    "fix": "./node_modules/.bin/eslint . --ext .ts --no-error-on-unmatched-pattern --fix",
    "pretty": "prettier --write src/*.{js,json,ts}",
    "postpretty": "npm run fix",
    "postinstall": "npx prisma generate",
    "docker": "docker-compose up",
    "docker-unix": "sudo docker-compose up",
    "docker-rebuild": "docker-compose up --build --force-recreate --renew-anon-volumes",
    "docker-unix-rebuild": "sudo docker-compose up --build --force-recreate --renew-anon-volumes",
    "psql": "psql --host=localhost --port=3001 --dbname=colorimage",
    "setup": "npm install && npx prisma generate && npx prisma db seed && npm run dev",
    "prisma": "npx prisma generate && npx prisma migrate dev && npx prisma format",
    "reset_prisma": "npx prisma db push --accept-data-loss --schema=./prisma/reset.prisma; prisma db push --accept-data-loss",
    "emulators": "firebase emulators:start",
    "debug": "heroku ps:forward 9229 -a colorimage-109-3900",
    "studio": "npx prisma studio"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/connect-redis": "0.0.17",
    "@types/cookie-parser": "^1.4.2",
    "@types/debug": "^4.1.7",
    "@types/express": "^4.17.7",
    "@types/express-session": "^1.17.4",
    "@types/http-errors": "^1.8.1",
    "@types/jsonwebtoken": "^8.5.5",
    "@types/morgan": "^1.9.3",
    "@types/node": "^14.17.32",
    "@types/passport": "^1.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/pg": "^8.6.1",
    "@types/socket.io": "^3.0.2",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "^4.32.0",
    "@typescript-eslint/parser": "^4.32.0",
    "debug": "^4.3.2",
    "eslint": "^7.32.0",
    "eslint-plugin-import": "^2.24.2",
    "nodemon": "^2.0.4",
    "prettier": "^2.4.1",
    "ts-node": "^8.10.2",
    "typescript": "^4.4.4"
  },
  "dependencies": {
    "@prisma/client": "^3.2.1",
    "@socket.io/admin-ui": "^0.2.0",
    "@types/cors": "^2.8.7",
    "@types/nodemailer": "^6.4.0",
    "@types/validator": "^13.1.3",
    "bcrypt": "^5.0.0",
    "chalk": "^4.1.2",
    "connect-redis": "^6.0.0",
    "prisma": "^3.2.1",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "express": "^4.17.1",
    "express-session": "^1.17.2",
    "express-validator": "^6.13.0",
    "firebase-admin": "^10.0.0",
    "http-errors": "^1.7.2",
    "http-status-codes": "^2.1.4",
    "jsonwebtoken": "^8.5.1",
    "moment": "^2.29.1",
    "morgan": "^1.10.0",
    "nodemailer": "^6.4.11",
    "passport": "^0.4.1",
    "passport-local": "^1.0.0",
    "dotenv": "^10.0.0",
    "pg": "^8.7.1",
    "redis": "^3.1.2",
    "reflect-metadata": "^0.1.13",
    "socket.io": "^4.2.0",
    "socketio-auth": "^0.1.1",
    "swagger-ui-express": "^4.1.6",
    "tedis": "^0.1.12",
    "tsoa": "^3.12.0",
    "uuid": "^8.3.0",
    "winston": "^3.3.3"
  }
}
